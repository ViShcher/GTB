name: Telegram Full Repo Dump

on:
  push:

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build repo_dump.txt
        shell: bash
        run: |
          set -euo pipefail
          git ls-files -z > tracked.txt
          tr '\0' '\n' < tracked.txt > files_all.txt

          # берём только текст/конфиги/скрипты
          grep -E '\.(py|pyi|txt|md|rst|toml|ini|cfg|conf|json|yml|yaml|xml|csv|tsv|sql|sh|bash)$|(^Dockerfile$)|(^Procfile$)|(^\.env\.example$)|(^Makefile$)|(^\.gitignore$)|(^\.editorconfig$)' files_all.txt > files_text.txt || true

          # на всякий случай выкинем потенциально секретные имена
          grep -viE '(^|/)\.env($|\.|/)|(^|/)secrets?($|/)|(^|/)token|(^|/)credentials?' files_text.txt > files.txt || true

          OUT="repo_dump.txt"
          : > "$OUT"
          {
            echo "# Repository dump"
            echo "Repo: $GITHUB_REPOSITORY"
            echo "Branch: $GITHUB_REF_NAME"
            echo "Commit: $GITHUB_SHA"
            echo "Pusher: $GITHUB_ACTOR"
            echo "Date (UTC): $(date -u '+%Y-%m-%d %H:%M:%S')"
            echo
          } >> "$OUT"

          while IFS= read -r f; do
            [ -f "$f" ] || continue
            size=$(wc -c < "$f" | tr -d ' ')
            echo "========================================" >> "$OUT"
            echo "FILE: $f  (size: ${size} bytes)" >> "$OUT"
            echo "----------------------------------------" >> "$OUT"
            if [ "$size" -le 1572864 ]; then
              # на всякий случай проверим, что это текст
              if file -bi "$f" | grep -qi 'charset='; then
                cat "$f" >> "$OUT"
              else
                echo "[skipped: non-text or unknown encoding]" >> "$OUT"
              fi
            else
              echo "[skipped: size > 1.5MB]" >> "$OUT"
            fi
            echo >> "$OUT"
          done < files.txt

      - name: Send repo_dump.txt to Telegram
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        shell: bash
        run: |
          set -euo pipefail
          curl -sS -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendDocument" \
            -F chat_id="${TG_CHAT_ID}" \
            -F document="@repo_dump.txt" \
            -F caption="repo_dump.txt (весь проект одним файлом)" > /dev/null
